const axios = require('axios');

const BASE_URL = "https://demoqa.com";
const USERNAME = "testeQA" + Math.floor(Math.random() * 1000); // Garante um nome √∫nico
const PASSWORD = "Teste@123";

let userID = "";
let token = "";
let books = [];

// Fun√ß√£o para criar um usu√°rio
async function createUser() {
    try {
        const response = await axios.post(`${BASE_URL}/Account/v1/User`, {
            userName: USERNAME,
            password: PASSWORD
        });
        userID = response.data.userID;
        console.log("‚úÖ Usu√°rio criado:", response.data);
    } catch (error) {
        console.error("‚ùå Erro ao criar usu√°rio:", error.response.data);
    }
}

// Fun√ß√£o para gerar um token
async function generateToken() {
    try {
        const response = await axios.post(`${BASE_URL}/Account/v1/GenerateToken`, {
            userName: USERNAME,
            password: PASSWORD
        });
        token = response.data.token;
        console.log("‚úÖ Token gerado:", token);
    } catch (error) {
        console.error("‚ùå Erro ao gerar token:", error.response.data);
    }
}

// Fun√ß√£o para verificar autoriza√ß√£o do usu√°rio
async function checkAuthorization() {
    try {
        const response = await axios.post(`${BASE_URL}/Account/v1/Authorized`, {
            userName: USERNAME,
            password: PASSWORD
        });
        console.log("‚úÖ Usu√°rio autorizado:", response.data);
    } catch (error) {
        console.error("‚ùå Erro ao verificar autoriza√ß√£o:", error.response.data);
    }
}

// Fun√ß√£o para listar livros dispon√≠veis
async function listBooks() {
    try {
        const response = await axios.get(`${BASE_URL}/BookStore/v1/Books`);
        books = response.data.books;
        console.log("üìö Livros dispon√≠veis:", books);
    } catch (error) {
        console.error("‚ùå Erro ao listar livros:", error.response.data);
    }
}

// Fun√ß√£o para reservar dois livros
async function reserveBooks() {
    if (books.length < 2) {
        console.error("‚ùå N√£o h√° livros suficientes para reservar.");
        return;
    }

    try {
        const response = await axios.post(`${BASE_URL}/BookStore/v1/Books`, {
            userId: userID,
            collectionOfIsbns: [
                { "isbn": books[0].isbn },
                { "isbn": books[1].isbn }
            ]
        }, {
            headers: { Authorization: `Bearer ${token}` }
        });
        console.log("‚úÖ Livros reservados:", response.data);
    } catch (error) {
        console.error("‚ùå Erro ao reservar livros:", error.response.data);
    }
}

// Fun√ß√£o para obter detalhes do usu√°rio
async function getUserDetails() {
    try {
        const response = await axios.get(`${BASE_URL}/Account/v1/User/${userID}`, {
            headers: { Authorization: `Bearer ${token}` }
        });
        console.log("üë§ Detalhes do usu√°rio:", response.data);
    } catch (error) {
        console.error("‚ùå Erro ao obter detalhes do usu√°rio:", error.response.data);
    }
}

// Fluxo completo da execu√ß√£o
async function main() {
    await createUser();
    await generateToken();
    await checkAuthorization();
    await listBooks();
    await reserveBooks();
    await getUserDetails();
}

main();
